apiVersion: v1
kind: ConfigMap
metadata:
  name: {{ .Values.app }}
  namespace: {{ .Values.namespace }}
data: 
  local.json: |
    {
      "api_addr": "http://127.0.0.1:8200",
      "cluster_addr": "https://127.0.0.1:8201",
      "disable_mlock": "true",
      "ui": "true",
      "backend": {
        "file": {
          "path": "/vault/file"
        }
      },
      "default_lease_ttl": "168h",
      "max_lease_ttl": "720h",
      "listener": {
        "tcp": {
          "address": "0.0.0.0:8200",
          "tls_disable": "true"
        }
      }
    }
---
apiVersion: apps/v1
kind: Deployment
metadata:
  creationTimestamp: null
  labels:
    app: {{ .Values.app }}
  name: {{ .Values.app }}
  namespace: {{ .Values.namespace }}
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      app: {{ .Values.app }}
  strategy: {}
  template:
    metadata:
      creationTimestamp: null
      labels:
        app: {{ .Values.app }}
    spec:
      containers:
      - image: {{ .Values.image.repository }}:{{ .Values.image.tag }}
        name: {{ .Values.app }}
        ports:
        - containerPort: {{ .Values.service.port }}
        # command: ["vault", "server"]
        args: ["server"]
        securityContext: 
          capabilities:
            add: [{{ template "pathtoexclude" . }}]
        env:
        # - name: VAULT_DEV_ROOT_TOKEN_ID
        #   value: myroot
        # - name: VAULT_DEV_LISTEN_ADDRESS
        #   value: 0.0.0.0:{{ .Values.service.port }}
        - name: VAULT_LOCAL_CONFIG
          # value: "{\"backend\": {\"file\": {\"path\": \"/vault/file\"}}, \"default_lease_ttl\": \"168h\", \"max_lease_ttl\": \"720h\"}"
          valueFrom:
            configMapKeyRef:
              name: {{ .Values.app }}
              key: local.json
        volumeMounts:
        - mountPath: /vault/file
          name: {{ .Values.app }}
          # - name: config-{{ .Values.app }}
          #   mountPath: /vault/config
        resources: {}
      volumes:
      - name: {{ .Values.app }}
        persistentVolumeClaim:
          claimName: {{ .Values.app }}
      # - name: config-{{ .Values.app }}
      #   configMap:
      #     name: {{ .Values.app }}
      #     items:
      #     - key: local.json
      #       path: local.json

status: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: null
  labels:
    app: {{ .Values.app }}
  name: {{ .Values.app }}
  namespace: {{ .Values.namespace }}
spec:
  ports:
  - name: "{{ .Values.service.port }}"
    port: {{ .Values.service.port }}
    protocol: TCP
    targetPort: {{ .Values.service.port }}
  selector:
    app: {{ .Values.app }}
  type: {{ .Values.service.type }}
status:
  loadBalancer: {}
---
apiVersion: v1
kind: PersistentVolume
metadata:
  name: {{ .Values.app }}
  # annotations:
  #   pv.beta.kubernetes.io/gid: "501"
spec:
  capacity:
    storage: {{ .Values.resources.storage.size }}
  volumeMode: Filesystem
  accessModes:
  - {{ .Values.resources.storage.access }}
  # persistentVolumeReclaimPolicy: {{ .Values.resources.storage.policy }}
  storageClassName: hostpath
  local:
    path: {{ .Values.resources.storage.path }}
  nodeAffinity:
    required:
      nodeSelectorTerms:
      - matchExpressions:
        - key: kubernetes.io/hostname
          operator: In
          values:
          - latitude
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: {{ .Values.app }}
  namespace: {{ .Values.namespace }}
spec:
  accessModes:
    - {{ .Values.resources.storage.access }}
  volumeMode: Filesystem
  storageClassName: hostpath
  resources:
    requests:
      storage: {{ .Values.resources.storage.size }}

